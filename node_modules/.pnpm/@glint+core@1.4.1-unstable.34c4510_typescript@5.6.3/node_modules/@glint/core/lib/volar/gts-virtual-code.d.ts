import { CodeMapping, VirtualCode } from '@volar/language-core';
import { IScriptSnapshot } from 'typescript';
import type ts from 'typescript';
import { Directive, rewriteModule } from '../transform/index.js';
import { GlintConfig } from '../index.js';
export type TS = typeof ts;
interface EmbeddedCodeWithDirectives extends VirtualCode {
    directives: readonly Directive[];
}
/**
 * A Volar VirtualCode representing .gts/.gjs files, which includes 0+ embedded
 * Handlebars templates within <template> tags.
 */
export declare class VirtualGtsCode implements VirtualCode {
    private glintConfig;
    snapshot: IScriptSnapshot;
    languageId: 'glimmer-ts' | 'glimmer-js';
    /**
     * The virtual files embedded in the GTS file. (such as <template>)
     */
    embeddedCodes: EmbeddedCodeWithDirectives[];
    /**
     * The id is a unique (within the VirtualCode and its embedded files) id for Volar to identify it. It could be any string.
     */
    id: string;
    mappings: CodeMapping[];
    transformedModule: ReturnType<typeof rewriteModule> | null;
    constructor(glintConfig: GlintConfig, snapshot: IScriptSnapshot, languageId: 'glimmer-ts' | 'glimmer-js');
    update(snapshot: IScriptSnapshot): void;
}
export {};
//# sourceMappingURL=gts-virtual-code.d.ts.map