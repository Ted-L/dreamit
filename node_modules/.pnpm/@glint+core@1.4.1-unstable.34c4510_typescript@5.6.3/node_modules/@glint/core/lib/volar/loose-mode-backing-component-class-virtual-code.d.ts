import { CodeMapping, VirtualCode } from '@volar/language-core';
import { IScriptSnapshot } from 'typescript';
import type ts from 'typescript';
import { Directive, rewriteModule } from '../transform/index.js';
import { GlintConfig } from '../index.js';
import { CodegenContext } from '@volar/language-core/lib/types.js';
import { URI } from 'vscode-uri';
export type TS = typeof ts;
interface EmbeddedCodeWithDirectives extends VirtualCode {
    directives: readonly Directive[];
}
/**
 * A Volar VirtualCode representing the .ts/.js file of a Ember/Glimmer component
 * class that serves as a backing class for an associated .hbs template. These kinds of
 * components are only supported when using `ember-loose` environment.
 */
export declare class LooseModeBackingComponentClassVirtualCode implements VirtualCode {
    private glintConfig;
    snapshot: IScriptSnapshot;
    fileId: URI | string;
    codegenContext: CodegenContext;
    embeddedCodes: EmbeddedCodeWithDirectives[];
    /**
     * The id is a unique (within the VirtualCode and its embedded files) id for Volar to identify it. It could be any string.
     */
    id: string;
    mappings: CodeMapping[];
    transformedModule: ReturnType<typeof rewriteModule> | null;
    get languageId(): string;
    constructor(glintConfig: GlintConfig, snapshot: IScriptSnapshot, fileId: URI | string, codegenContext: CodegenContext);
    update(snapshot: IScriptSnapshot): void;
}
export {};
//# sourceMappingURL=loose-mode-backing-component-class-virtual-code.d.ts.map