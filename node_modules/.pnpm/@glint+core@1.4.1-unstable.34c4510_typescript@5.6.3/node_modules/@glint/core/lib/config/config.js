import * as path from 'node:path';
import { GlintEnvironment } from './environment.js';
/**
 * This class represents parsed Glint configuration from a `tsconfig` or `jsconfig` file,
 * with methods for interrogating project configuration based on its contents.
 */
export class GlintConfig {
    constructor(ts, configPath, config) {
        Object.defineProperty(this, 'ts', { value: ts });
        this.configPath = normalizePath(configPath);
        this.rootDir = path.dirname(configPath);
        this.environment = GlintEnvironment.load(config.environment, { rootDir: this.rootDir });
        this.checkStandaloneTemplates = config.checkStandaloneTemplates ?? true;
        this.enableTsPlugin = config.enableTsPlugin ?? false;
    }
}
export function normalizePath(fileName) {
    if (path.sep !== '/') {
        return fileName.split(path.sep).join('/');
    }
    return fileName;
}
//# sourceMappingURL=config.js.map