import { action } from "@ember/object";
import { equal } from "@ember/object/computed";
import { isEmpty } from "@ember/utils";
import { classNames } from "@ember-decorators/component";
import ComboBoxComponent from "select-kit/components/combo-box";
import { pluginApiIdentifiers, selectKitOptions } from "select-kit/components/select-kit";
export const FORMAT = "YYYY-MM-DD HH:mmZ";
const FutureDateInputSelector = dt7948.c(class FutureDateInputSelector extends ComboBoxComponent {
  static {
    dt7948.g(this.prototype, "isCustom", [equal("value", "custom")]);
  }
  #isCustom = (dt7948.i(this, "isCustom"), void 0);
  userTimezone = null;
  init() {
    super.init(...arguments);
    this.userTimezone = this.currentUser.user_option.timezone;
  }
  modifyComponentForRow() {
    return "future-date-input-selector/future-date-input-selector-row";
  }
  _onChange(value) {
    if (value !== "custom" && !isEmpty(value)) {
      const {
        time
      } = this.content.find(x => x.id === value);
      if (time) {
        this.onChangeInput?.(time.locale("en").format(FORMAT));
      }
    }
    this.onChange?.(value);
  }
  static {
    dt7948.n(this.prototype, "_onChange", [action]);
  }
}, [pluginApiIdentifiers("future-date-input-selector"), selectKitOptions({
  autoInsertNoneItem: false,
  headerComponent: "future-date-input-selector/future-date-input-selector-header"
}), classNames("future-date-input-selector")]);
export default FutureDateInputSelector;