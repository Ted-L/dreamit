/* import __COLOCATED_TEMPLATE__ from './pinned-button.hbs.js'; */
import Component from "@ember/component";
import { classNameBindings, classNames } from "@ember-decorators/component";
import discourseComputed from "discourse/lib/decorators";
import { i18n } from "discourse-i18n";
import { pluginApiIdentifiers } from "select-kit/components/select-kit";
const PinnedButton = dt7948.c(class PinnedButton extends Component {
  descriptionKey = "help";
  appendReason = true;
  reasonText(pinnedGlobally, pinned) {
    const globally = pinnedGlobally ? "_globally" : "";
    const pinnedKey = pinned ? `pinned${globally}` : "unpinned";
    const key = `topic_statuses.${pinnedKey}.help`;
    return i18n(key);
  }
  static {
    dt7948.n(this.prototype, "reasonText", [discourseComputed("topic.pinned_globally", "pinned")]);
  }
  isHidden(pinned, deleted, unpinned) {
    return deleted || !pinned && !unpinned;
  }
  static {
    dt7948.n(this.prototype, "isHidden", [discourseComputed("pinned", "topic.deleted", "topic.unpinned")]);
  }
}, [pluginApiIdentifiers("pinned-button"), classNameBindings("isHidden"), classNames("pinned-button")]);
export default PinnedButton;