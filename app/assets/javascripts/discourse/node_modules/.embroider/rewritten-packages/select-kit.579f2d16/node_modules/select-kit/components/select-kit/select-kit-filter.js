/* import __COLOCATED_TEMPLATE__ from './select-kit-filter.hbs.js'; */
import Component from "@ember/component";
import { action, computed } from "@ember/object";
import { not } from "@ember/object/computed";
import { isPresent } from "@ember/utils";
import { attributeBindings, classNameBindings, classNames } from "@ember-decorators/component";
import discourseComputed from "discourse/lib/decorators";
import { i18n } from "discourse-i18n";
import UtilsMixin from "select-kit/mixins/utils";
const SelectKitFilter = dt7948.c(class SelectKitFilter extends Component.extend(UtilsMixin) {
  tabIndex = -1;
  static {
    dt7948.g(this.prototype, "isExpanded", [not("isHidden")]);
  }
  #isExpanded = (dt7948.i(this, "isExpanded"), void 0);
  get isHidden() {
    return !this.selectKit.options.filterable && !this.selectKit.options.allowAny && !this.selectKit.options.autoFilterable;
  }
  static {
    dt7948.n(this.prototype, "isHidden", [computed("selectKit.options.{filterable,allowAny,autoFilterable}", "content.[]")]);
  }
  placeholder(placeholder, translatedPlaceholder) {
    if (isPresent(translatedPlaceholder)) {
      return translatedPlaceholder;
    }
    if (isPresent(placeholder)) {
      return i18n(placeholder);
    }
    return i18n(this.selectKit.options.allowAny ? "select_kit.filter_placeholder_with_any" : "select_kit.filter_placeholder");
  }
  static {
    dt7948.n(this.prototype, "placeholder", [discourseComputed("selectKit.options.filterPlaceholder", "selectKit.options.translatedFilterPlaceholder", "selectKit.options.allowAny")]);
  }
  onPaste() {}
  static {
    dt7948.n(this.prototype, "onPaste", [action]);
  }
  onInput(event) {
    this.selectKit.onInput(event);
    return true;
  }
  static {
    dt7948.n(this.prototype, "onInput", [action]);
  }
  onKeyup(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
    return true;
  }
  static {
    dt7948.n(this.prototype, "onKeyup", [action]);
  }
  onKeydown(event) {
    if (!this.selectKit.onKeydown(event)) {
      return false;
    }
    if (event.key === "Tab" && this.selectKit.isLoading) {
      this.selectKit.cancelSearch();
      this.selectKit.close(event);
      return true;
    }
    if (event.key === "ArrowLeft" || event.key === "ArrowRight") {
      return true;
    }
    if (event.key === "Backspace" && !this.selectKit.filter) {
      this.selectKit.deselectLast();
      event.preventDefault();
      return false;
    }
    if (event.key === "ArrowUp") {
      this.selectKit.highlightLast();
      event.preventDefault();
      return false;
    }
    if (event.key === "ArrowDown") {
      if (!this.selectKit.isExpanded) {
        this.selectKit.open(event);
      }
      this.selectKit.highlightFirst();
      event.preventDefault();
      return false;
    }
    if (event.key === "Escape") {
      this.selectKit.close(event);
      this.selectKit.headerElement().focus();
      event.preventDefault();
      event.stopPropagation();
      return false;
    }
    if (event.key === "Enter" && this.selectKit.highlighted) {
      this.selectKit.select(this.getValue(this.selectKit.highlighted), this.selectKit.highlighted);
      event.preventDefault();
      event.stopImmediatePropagation();
      return false;
    }
    if (event.key === "Enter" && (!this.selectKit.highlighted || this.selectKit.enterDisabled)) {
      this.element.querySelector("input").focus();
      if (this.selectKit.enterDisabled) {
        event.preventDefault();
        event.stopImmediatePropagation();
      }
      return false;
    }
    this.selectKit.set("highlighted", null);
  }
  static {
    dt7948.n(this.prototype, "onKeydown", [action]);
  }
}, [attributeBindings("role"), classNameBindings("isExpanded:is-expanded"), classNames("select-kit-filter")]);
export default SelectKitFilter;