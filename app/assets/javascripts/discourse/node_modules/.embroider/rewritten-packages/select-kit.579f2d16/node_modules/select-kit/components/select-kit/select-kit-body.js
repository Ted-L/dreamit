/* import __COLOCATED_TEMPLATE__ from './select-kit-body.hbs.js'; */
import Component from "@ember/component";
import { computed } from "@ember/object";
import { next } from "@ember/runloop";
import { classNameBindings, classNames } from "@ember-decorators/component";
import { bind } from "discourse/lib/decorators";
const SelectKitBody = dt7948.c(class SelectKitBody extends Component {
  get emptyBody() {
    return false;
  }
  static {
    dt7948.n(this.prototype, "emptyBody", [computed("selectKit.{filter,hasNoContent}")]);
  }
  didInsertElement() {
    super.didInsertElement(...arguments);
    this.element.style.position = "relative";
    document.addEventListener("click", this.handleClick, true);
    this.selectKit.mainElement().addEventListener("keydown", this._handleKeydown, true);
  }
  willDestroyElement() {
    super.willDestroyElement(...arguments);
    document.removeEventListener("click", this.handleClick, true);
    this.selectKit.mainElement()?.removeEventListener("keydown", this._handleKeydown, true);
  }
  handleClick(event) {
    if (!this.selectKit.isExpanded || !this.selectKit.mainElement()) {
      return;
    }
    if (this.selectKit.mainElement().contains(event.target)) {
      return;
    }
    this.selectKit.close(event);
  }
  static {
    dt7948.n(this.prototype, "handleClick", [bind]);
  }
  _handleKeydown(event) {
    if (!this.selectKit.isExpanded || event.key !== "Tab") {
      return;
    }
    next(() => {
      if (this.isDestroying || this.isDestroyed || this.selectKit.mainElement()?.contains(document.activeElement)) {
        return;
      }
      this.selectKit.close(event);
    });
  }
  static {
    dt7948.n(this.prototype, "_handleKeydown", [bind]);
  }
}, [classNameBindings("emptyBody:empty-body"), classNames("select-kit-body")]);
export default SelectKitBody;