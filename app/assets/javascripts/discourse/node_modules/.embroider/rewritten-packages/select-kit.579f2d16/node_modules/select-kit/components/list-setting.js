import { computed } from "@ember/object";
import { readOnly } from "@ember/object/computed";
import { classNames } from "@ember-decorators/component";
import { makeArray } from "discourse/lib/helpers";
import MultiSelectComponent from "select-kit/components/multi-select";
import { MAIN_COLLECTION, pluginApiIdentifiers, selectKitOptions } from "select-kit/components/select-kit";
const ListSetting = dt7948.c(class ListSetting extends MultiSelectComponent {
  choices = null;
  nameProperty = null;
  valueProperty = null;
  static {
    dt7948.g(this.prototype, "content", [readOnly("choices")]);
  }
  #content = (dt7948.i(this, "content"), void 0);
  modifyComponentForRow(collection) {
    if (collection === MAIN_COLLECTION && this.settingName?.includes("color")) {
      return "create-color-row";
    }
  }
  get selectedChoiceComponent() {
    if (this.settingName?.includes("color")) {
      return "selected-choice-color";
    } else {
      return "selected-choice";
    }
  }
  static {
    dt7948.n(this.prototype, "selectedChoiceComponent", [computed("settingName")]);
  }
  deselect(value) {
    this.onChangeChoices && this.onChangeChoices([...new Set([value, ...makeArray(this.choices)])]);
    super.deselect(...arguments);
  }
}, [pluginApiIdentifiers("list-setting"), selectKitOptions({
  filterable: true,
  selectedChoiceComponent: "selectedChoiceComponent"
}), classNames("list-setting")]);
export default ListSetting;