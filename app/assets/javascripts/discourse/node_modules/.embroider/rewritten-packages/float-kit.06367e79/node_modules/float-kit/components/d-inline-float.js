import Component from "@glimmer/component";
import { concat } from "@ember/helper";
import { service } from "@ember/service";
import { and } from "truth-helpers";
import DModal from "discourse/components/d-modal";
import concatClass from "discourse/helpers/concat-class";
import DFloatBody from "float-kit/components/d-float-body";
import { precompileTemplate } from "@ember/template-compilation";
import { setComponentTemplate } from "@ember/component";
export default class DInlineFloat extends Component {
  static {
    dt7948.g(this.prototype, "site", [service]);
  }
  #site = (dt7948.i(this, "site"), void 0);
  static {
    setComponentTemplate(precompileTemplate("\n    {{#if @instance.expanded}}\n      {{#if (and this.site.mobileView @instance.options.modalForMobile)}}\n        <DModal @closeModal={{@instance.close}} @hideHeader={{true}} data-identifier={{@instance.options.identifier}} data-content class={{concatClass \"fk-d-menu-modal\" (concat @instance.options.identifier \"-content\")}}>\n          {{#if @instance.options.component}}\n            <@instance.options.component @data={{@instance.options.data}} @close={{@instance.close}} />\n          {{else}}\n            {{@instance.options.content}}\n          {{/if}}\n        </DModal>\n      {{else}}\n        <DFloatBody @instance={{@instance}} @trapTab={{@trapTab}} @mainClass={{@mainClass}} @innerClass={{@innerClass}} @role={{@role}} @portalOutletElement={{@instance.portalOutletElement}} @inline={{@inline}}>\n          {{#if @instance.options.component}}\n            <@instance.options.component @data={{@instance.options.data}} @close={{@instance.close}} />\n          {{else}}\n            {{@instance.options.content}}\n          {{/if}}\n        </DFloatBody>\n      {{/if}}\n    {{/if}}\n  ", {
      strictMode: true,
      scope: () => ({
        and,
        DModal,
        concatClass,
        concat,
        DFloatBody
      })
    }), this);
  }
}