import Component from "@glimmer/component";
import { service } from "@ember/service";
import { modifier } from "ember-modifier";
import deprecated from "discourse/lib/deprecated";
import { precompileTemplate } from "@ember/template-compilation";
import { setComponentTemplate } from "@ember/component";
export default class DPopover extends Component {
  static {
    dt7948.g(this.prototype, "tooltip", [service]);
  }
  #tooltip = (dt7948.i(this, "tooltip"), void 0);
  registerDTooltip = modifier(element => {
    deprecated("`<DPopover />` is deprecated. Use `<DTooltip />` or the `tooltip` service instead.", {
      id: "discourse.d-popover"
    });
    const trigger = element.children[0];
    const content = element.children[1];
    if (!trigger || !content) {
      return;
    }
    const instance = this.tooltip.register(trigger, {
      content
    });
    content.remove();
    return () => {
      instance.destroy();
    };
  });
  static {
    setComponentTemplate(precompileTemplate("\n    <div style=\"display:inline-flex;\" {{this.registerDTooltip}}>\n      {{yield}}\n    </div>\n  ", {
      strictMode: true
    }), this);
  }
}